# Generated by Django 4.2 on 2023-12-18 11:25

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BaseResources',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField()),
                ('avg_price', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Средняя цена за единицу')),
            ],
        ),
        migrations.CreateModel(
            name='Food',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quality', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Качество продуктов питания')),
            ],
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время начала игры')),
                ('finish_date', models.DateTimeField(auto_now=True, verbose_name='Дата и время завершения игры')),
                ('current_round', models.PositiveSmallIntegerField()),
                ('game_over', models.BooleanField(default=False, verbose_name='Игра завершена')),
                ('country_name', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'ordering': ['-finish_date'],
            },
        ),
        migrations.CreateModel(
            name='Goods',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quality', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Качество товаров')),
            ],
        ),
        migrations.CreateModel(
            name='Happiness',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.DecimalField(decimal_places=2, max_digits=4, verbose_name='Индекс счастья')),
                ('gdp_per_soul', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='ВВП на душу населения')),
                ('joblessness', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Безработица')),
                ('birth_rate', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Рождаемость')),
                ('mortality_rate', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Смертность')),
                ('education', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Образованность')),
                ('welfare', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Благосостояние')),
                ('transport_accessibility', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Транспортная доступность')),
                ('goods_provision', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Обеспеченность товарами')),
                ('energy_provision', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Обеспеченность энергоресурсами')),
                ('safety', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Безопасность')),
            ],
        ),
        migrations.CreateModel(
            name='MinistryAgriculture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_workers', models.IntegerField()),
                ('number_equipment', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MinistryEducationLaborSocialProtection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='MinistryEnergy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_workers', models.IntegerField()),
                ('number_equipment', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MinistryFinance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_workers', models.IntegerField()),
                ('number_equipment', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MinistryIndustry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_workers', models.IntegerField()),
                ('number_equipment', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MinistryNaturalResources',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_workers', models.IntegerField()),
                ('number_equipment', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MinistryTransport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_workers', models.IntegerField()),
                ('number_equipment', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Round',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveSmallIntegerField(default=0)),
                ('game', models.ForeignKey(help_text='Годовой период', on_delete=django.db.models.deletion.CASCADE, related_name='rounds', to='games.game', verbose_name='Годовой период')),
            ],
        ),
        migrations.CreateModel(
            name='Safety',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Индекс безопасности')),
                ('environment', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Окружающая среда')),
                ('remaining_resources', models.PositiveIntegerField(default=1000000, verbose_name='Окружающая среда')),
                ('food_security', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Продовольственная безопасность')),
                ('food_reserve', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Продовольственный резерв')),
                ('food_quality', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Качество продовольствия')),
                ('national_debt', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Государственный долг')),
            ],
        ),
        migrations.CreateModel(
            name='Energy',
            fields=[
                ('baseresources_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='games.baseresources')),
            ],
            bases=('games.baseresources',),
        ),
        migrations.CreateModel(
            name='NaturalResources',
            fields=[
                ('baseresources_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='games.baseresources')),
            ],
            bases=('games.baseresources',),
        ),
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('finance', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Финансы')),
                ('national_debt', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Финансы')),
                ('food', models.ForeignKey(help_text='Продукты питания', on_delete=django.db.models.deletion.CASCADE, related_name='food', to='games.food', verbose_name='Продукты питания')),
                ('goods', models.ForeignKey(help_text='Товары и оборудование', on_delete=django.db.models.deletion.CASCADE, related_name='goods', to='games.goods', verbose_name='Товары')),
                ('round', models.ForeignKey(help_text='Хранилище финансов и материальных запасов', on_delete=django.db.models.deletion.CASCADE, related_name='warehouses', to='games.round', verbose_name='Хранилище')),
            ],
        ),
    ]
